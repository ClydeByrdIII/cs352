(Program (Main (PrintStatement (CallExp (new "BS") "Start" (int 20)))) (ClassDecl "BS" null (VarDecl (TypeIntArray) "number") (VarDecl (TypeInt) "size") (MethodDecl (TypeInt) "Start" (Parameters (Parameter (TypeInt) "sz")) (VarDecls (VarDecl (TypeInt) "aux01") (VarDecl (TypeInt) "aux02") (VarDecl (TypeInt) "i")) (Statements (ExpStatement (AssignExp (VarExp "aux01") (CallExp (ThisExp) "Init" (VarExp "sz")))) (ExpStatement (AssignExp (VarExp "aux02") (CallExp (ThisExp) "Print"))) (ExpStatement (AssignExp (VarExp "i") (&& (&& (VarExp "aux01") (VarExp "aux02")) (int 1)))) (IfStatement (CallExp (ThisExp) "Search" (int 8)) (PrintStatement (int 1)) (PrintStatement (int 0))) (IfStatement (CallExp (ThisExp) "Search" (int 19)) (PrintStatement (int 1)) (PrintStatement (int 0))) (IfStatement (CallExp (ThisExp) "Search" (int 20)) (PrintStatement (int 1)) (PrintStatement (int 0))) (IfStatement (CallExp (ThisExp) "Search" (int 21)) (PrintStatement (int 1)) (PrintStatement (int 0))) (IfStatement (CallExp (ThisExp) "Search" (int 37)) (PrintStatement (int 1)) (PrintStatement (int 0))) (IfStatement (CallExp (ThisExp) "Search" (int 38)) (PrintStatement (int 1)) (PrintStatement (int 0))) (IfStatement (CallExp (ThisExp) "Search" (int 39)) (PrintStatement (int 1)) (PrintStatement (int 0))) (IfStatement (CallExp (ThisExp) "Search" (int 50)) (PrintStatement (int 1)) (PrintStatement (int 0)))) (Return (int 999))) (MethodDecl (TypeBoolean) "Search" (Parameters (Parameter (TypeInt) "num")) (VarDecls (VarDecl (TypeBoolean) "bs01") (VarDecl (TypeInt) "right") (VarDecl (TypeInt) "left") (VarDecl (TypeBoolean) "var_cont") (VarDecl (TypeInt) "medium") (VarDecl (TypeInt) "aux01") (VarDecl (TypeInt) "nt")) (Statements (ExpStatement (AssignExp (VarExp "aux01") (int 0))) (ExpStatement (AssignExp (VarExp "bs01") (boolean false))) (ExpStatement (AssignExp (VarExp "right") (MemberExp (VarExp "number") "length"))) (ExpStatement (AssignExp (VarExp "right") (- (VarExp "right") (int 1)))) (ExpStatement (AssignExp (VarExp "left") (int 0))) (ExpStatement (AssignExp (VarExp "var_cont") (boolean true))) (WhileStatement (VarExp "var_cont") (BlockStatement (ExpStatement (AssignExp (VarExp "medium") (+ (VarExp "left") (VarExp "right")))) (ExpStatement (AssignExp (VarExp "medium") (CallExp (ThisExp) "Div" (VarExp "medium")))) (ExpStatement (AssignExp (VarExp "aux01") (IndexExp (VarExp "number") (VarExp "medium")))) (IfStatement (< (VarExp "num") (VarExp "aux01")) (ExpStatement (AssignExp (VarExp "right") (- (VarExp "medium") (int 1)))) (ExpStatement (AssignExp (VarExp "left") (+ (VarExp "medium") (int 1))))) (IfStatement (CallExp (ThisExp) "Compare" (VarExp "aux01") (VarExp "num")) (ExpStatement (AssignExp (VarExp "var_cont") (boolean false))) (ExpStatement (AssignExp (VarExp "var_cont") (boolean true)))) (IfStatement (< (VarExp "right") (VarExp "left")) (ExpStatement (AssignExp (VarExp "var_cont") (boolean false))) (ExpStatement (AssignExp (VarExp "nt") (int 0)))))) (IfStatement (CallExp (ThisExp) "Compare" (VarExp "aux01") (VarExp "num")) (ExpStatement (AssignExp (VarExp "bs01") (boolean true))) (ExpStatement (AssignExp (VarExp "bs01") (boolean false))))) (Return (VarExp "bs01"))) (MethodDecl (TypeInt) "Div" (Parameters (Parameter (TypeInt) "num")) (VarDecls (VarDecl (TypeInt) "count01") (VarDecl (TypeInt) "count02") (VarDecl (TypeInt) "aux03")) (Statements (ExpStatement (AssignExp (VarExp "count01") (int 0))) (ExpStatement (AssignExp (VarExp "count02") (int 0))) (ExpStatement (AssignExp (VarExp "aux03") (- (VarExp "num") (int 1)))) (WhileStatement (< (VarExp "count02") (VarExp "aux03")) (BlockStatement (ExpStatement (AssignExp (VarExp "count01") (+ (VarExp "count01") (int 1)))) (ExpStatement (AssignExp (VarExp "count02") (+ (VarExp "count02") (int 2))))))) (Return (VarExp "count01"))) (MethodDecl (TypeBoolean) "Compare" (Parameters (Parameter (TypeInt) "num1") (Parameter (TypeInt) "num2")) (VarDecls (VarDecl (TypeBoolean) "retval") (VarDecl (TypeInt) "aux02")) (Statements (ExpStatement (AssignExp (VarExp "retval") (boolean false))) (ExpStatement (AssignExp (VarExp "aux02") (+ (VarExp "num2") (int 1)))) (IfStatement (< (VarExp "num1") (VarExp "num2")) (ExpStatement (AssignExp (VarExp "retval") (boolean false))) (IfStatement (NotExp (< (VarExp "num1") (VarExp "aux02"))) (ExpStatement (AssignExp (VarExp "retval") (boolean false))) (ExpStatement (AssignExp (VarExp "retval") (boolean true)))))) (Return (VarExp "retval"))) (MethodDecl (TypeInt) "Print" (Parameters) (VarDecls (VarDecl (TypeInt) "j")) (Statements (ExpStatement (AssignExp (VarExp "j") (int 1))) (WhileStatement (< (VarExp "j") (VarExp "size")) (BlockStatement (PrintStatement (IndexExp (VarExp "number") (VarExp "j"))) (ExpStatement (AssignExp (VarExp "j") (+ (VarExp "j") (int 1)))))) (PrintStatement (int 99999))) (Return (int 0))) (MethodDecl (TypeInt) "Init" (Parameters (Parameter (TypeInt) "sz")) (VarDecls (VarDecl (TypeInt) "j") (VarDecl (TypeInt) "k") (VarDecl (TypeInt) "aux02") (VarDecl (TypeInt) "aux01")) (Statements (ExpStatement (AssignExp (VarExp "size") (VarExp "sz"))) (ExpStatement (AssignExp (VarExp "number") (NewIntArrayExp (VarExp "sz")))) (ExpStatement (AssignExp (VarExp "j") (int 1))) (ExpStatement (AssignExp (VarExp "k") (+ (VarExp "size") (int 1)))) (WhileStatement (< (VarExp "j") (VarExp "size")) (BlockStatement (ExpStatement (AssignExp (VarExp "aux01") (* (int 2) (VarExp "j")))) (ExpStatement (AssignExp (VarExp "aux02") (- (VarExp "k") (int 3)))) (ExpStatement (AssignExp (IndexExp (VarExp "number") (VarExp "j")) (+ (VarExp "aux01") (VarExp "aux02")))) (ExpStatement (AssignExp (VarExp "j") (+ (VarExp "j") (int 1)))) (ExpStatement (AssignExp (VarExp "k") (- (VarExp "k") (int 1))))))) (Return (int 0)))))
